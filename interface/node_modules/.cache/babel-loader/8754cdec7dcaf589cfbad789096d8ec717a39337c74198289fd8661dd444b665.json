{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tamiris Veras\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Project_T\\\\interface\\\\src\\\\services\\\\protected_route.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport { verificarToken } from './auth_service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carregando = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Carregando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Carregando;\nconst cookies = new Cookies();\nconst ProtectedRoute = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const verifyToken = async () => {\n      try {\n        const token = cookies.get('jwt');\n        if (!token) {\n          navigate('/', {\n            replace: true\n          });\n          return;\n        }\n        const valido = await verificarToken(token);\n        if (!valido) {\n          navigate('/', {\n            replace: true\n          });\n        }\n      } catch (error) {\n        console.error('Erro ao verificar autenticação:', error);\n        navigate('/', {\n          replace: true\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    verifyToken();\n  }, [navigate]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Carregando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"mtX1nWo+XulyP1Szewhc3edUGt0=\", false, function () {\n  return [useNavigate];\n});\n_c2 = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c, _c2;\n$RefreshReg$(_c, \"Carregando\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Cookies","verificarToken","jsxDEV","_jsxDEV","Carregando","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","cookies","ProtectedRoute","_ref","_s","navigate","isLoading","setIsLoading","verifyToken","token","get","replace","valido","error","console","_c2","$RefreshReg$"],"sources":["C:/Users/Tamiris Veras/OneDrive/Área de Trabalho/Project_T/interface/src/services/protected_route.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport { verificarToken } from './auth_service';\n\n\nconst Carregando = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 text-center\">\n                    <h1>Carregando...</h1>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst cookies = new Cookies();\n\nconst ProtectedRoute = ({ children }) => {\n    const navigate = useNavigate();\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        const verifyToken = async () => {\n            try {\n                const token = cookies.get('jwt');\n                if (!token) {\n                    navigate('/', { replace: true });\n                    return;\n                }\n                const valido = await verificarToken(token);\n                if (!valido) {\n                    navigate('/', { replace: true });\n                }\n            } catch (error) {\n                console.error('Erro ao verificar autenticação:', error);\n                navigate('/', { replace: true });\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        verifyToken();\n    }, [navigate]);\n    if (isLoading) {\n        return <Carregando />;\n    }\n    return children;\n};\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,cAAc,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,oBACID,OAAA;IAAKE,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBH,OAAA;MAAKE,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChBH,OAAA;QAAKE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eAC/BH,OAAA;UAAAG,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACC,EAAA,GAVIP,UAAU;AAYhB,MAAMQ,OAAO,GAAG,IAAIZ,OAAO,CAAC,CAAC;AAE7B,MAAMa,cAAc,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAET;EAAS,CAAC,GAAAQ,IAAA;EAChC,MAAME,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAChDD,SAAS,CAAC,MAAM;IACZ,MAAMsB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,KAAK,GAAGR,OAAO,CAACS,GAAG,CAAC,KAAK,CAAC;QAChC,IAAI,CAACD,KAAK,EAAE;UACRJ,QAAQ,CAAC,GAAG,EAAE;YAAEM,OAAO,EAAE;UAAK,CAAC,CAAC;UAChC;QACJ;QACA,MAAMC,MAAM,GAAG,MAAMtB,cAAc,CAACmB,KAAK,CAAC;QAC1C,IAAI,CAACG,MAAM,EAAE;UACTP,QAAQ,CAAC,GAAG,EAAE;YAAEM,OAAO,EAAE;UAAK,CAAC,CAAC;QACpC;MACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDR,QAAQ,CAAC,GAAG,EAAE;UAAEM,OAAO,EAAE;QAAK,CAAC,CAAC;MACpC,CAAC,SAAS;QACNJ,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IACDC,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EACd,IAAIC,SAAS,EAAE;IACX,oBAAOd,OAAA,CAACC,UAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzB;EACA,OAAOJ,QAAQ;AACnB,CAAC;AAACS,EAAA,CA5BIF,cAAc;EAAA,QACCd,WAAW;AAAA;AAAA2B,GAAA,GAD1Bb,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAF,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}